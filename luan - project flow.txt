1. browser call home page via a URL like http://localhost:8080/
2. a Controller will handle that request ("/").Then, it return a view, call "taphoa" for example.
3. In this time, system will look the layout file named layout.xml to find the definition of "taphoa" above.
But, why the system know layout.xml file? where is it configured?
	3.1 Firstly, check in web.xml, it will call servlet-context.xml to init servlet	
	3.2 And we will find the following lines
        <beans:property name="definitions">
            <beans:list>
                <beans:value>/WEB-INF/layouts/layouts.xml</beans:value>
                <!-- Scan views directory for Tiles configurations -->
                <beans:value>/WEB-INF/views/**/views.xml</beans:value>
            </beans:list>
        </beans:property>

	==> That's it.
	

===========below are steps to create a new object
1. crate new model: TH_Product
2. create repository: When use nee a complicated query, you should create function and write your query here
3. crate service: Create, update, read, delete here. Because class PagingAndSortingRepository of the Spring Framework supports simple tasks like create, update...
4. create service jpa

5. create controller



tham khao
http://www.dzone.com/tutorials/java/hibernate/hibernate-example/hibernate-mapping-many-to-many-using-annotations-1.html





